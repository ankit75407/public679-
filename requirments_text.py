# -*- coding: utf-8 -*-
"""requirments.text

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/139Nv-AXAnnVJ4LdAAED70lrWLaItaOnA
"""

# üì¶ Install packages
!pip install gradio yfinance matplotlib pandas requests --quiet

import gradio as gr
import yfinance as yf
import matplotlib.pyplot as plt
import pandas as pd
import requests
from io import BytesIO
from PIL import Image

# ‚úÖ 25 Company List with Logos
company_data = {
    "Apple": {"ticker": "AAPL", "logo": "https://logo.clearbit.com/apple.com"},
    "Amazon": {"ticker": "AMZN", "logo": "https://logo.clearbit.com/amazon.com"},
    "Google": {"ticker": "GOOGL", "logo": "https://logo.clearbit.com/google.com"},
    "Microsoft": {"ticker": "MSFT", "logo": "https://logo.clearbit.com/microsoft.com"},
    "Meta (Facebook)": {"ticker": "META", "logo": "https://logo.clearbit.com/facebook.com"},
    "Tesla": {"ticker": "TSLA", "logo": "https://logo.clearbit.com/tesla.com"},
    "NVIDIA": {"ticker": "NVDA", "logo": "https://logo.clearbit.com/nvidia.com"},
    "Netflix": {"ticker": "NFLX", "logo": "https://logo.clearbit.com/netflix.com"},
    "Intel": {"ticker": "INTC", "logo": "https://logo.clearbit.com/intel.com"},
    "AMD": {"ticker": "AMD", "logo": "https://logo.clearbit.com/amd.com"},
    "IBM": {"ticker": "IBM", "logo": "https://logo.clearbit.com/ibm.com"},
    "Adobe": {"ticker": "ADBE", "logo": "https://logo.clearbit.com/adobe.com"},
    "Oracle": {"ticker": "ORCL", "logo": "https://logo.clearbit.com/oracle.com"},
    "PayPal": {"ticker": "PYPL", "logo": "https://logo.clearbit.com/paypal.com"},
    "Salesforce": {"ticker": "CRM", "logo": "https://logo.clearbit.com/salesforce.com"},
    "Cisco": {"ticker": "CSCO", "logo": "https://logo.clearbit.com/cisco.com"},
    "Shopify": {"ticker": "SHOP", "logo": "https://logo.clearbit.com/shopify.com"},
    "Zoom": {"ticker": "ZM", "logo": "https://logo.clearbit.com/zoom.us"},
    "Qualcomm": {"ticker": "QCOM", "logo": "https://logo.clearbit.com/qualcomm.com"},
    "Uber": {"ticker": "UBER", "logo": "https://logo.clearbit.com/uber.com"},
    "Boeing": {"ticker": "BA", "logo": "https://logo.clearbit.com/boeing.com"},
    "Ford": {"ticker": "F", "logo": "https://logo.clearbit.com/ford.com"},
    "General Electric": {"ticker": "GE", "logo": "https://logo.clearbit.com/ge.com"},
    "Coca-Cola": {"ticker": "KO", "logo": "https://logo.clearbit.com/coca-colacompany.com"},
    "PepsiCo": {"ticker": "PEP", "logo": "https://logo.clearbit.com/pepsico.com"},
}

# üîÆ Dummy ML prediction (replace with your actual model)
def predict_stock(company_name, days):
    ticker = company_data[company_name]["ticker"]
    logo_url = company_data[company_name]["logo"]

    # üìä Download data
    df = yf.download(ticker, start="2000-01-01")
    df["Prediction"] = df["Close"].rolling(window=5).mean()  # Replace with real model

    # üñºÔ∏è Plot
    fig, ax = plt.subplots(figsize=(10, 5))
    ax.plot(df.index, df["Close"], label="Actual", linewidth=2)
    ax.plot(df.index, df["Prediction"], label="Prediction", linestyle="--")
    ax.set_title(f"{company_name} Stock Price & ML Forecast")
    ax.set_xlabel("Date")
    ax.set_ylabel("Price (USD)")
    ax.grid(True)
    ax.legend()

    # üñºÔ∏è Load logo image
    try:
        response = requests.get(logo_url)
        logo = Image.open(BytesIO(response.content))
    except:
        logo = None

    return fig, logo

# üé® Gradio Interface
with gr.Blocks() as demo:
    gr.Markdown("## üíπ AI-Powered Stock Forecasting App")
    gr.Markdown("Select a company to view historical trends and ML predictions. Powered by Python ü§ñ")

    with gr.Row():
        dropdown = gr.Dropdown(choices=list(company_data.keys()), label="Choose a Company")
        slider = gr.Slider(1, 30, step=1, value=7, label="Prediction Days")

    with gr.Row():
        plot_output = gr.Plot(label="Prediction Chart")
        logo_output = gr.Image(label="Company Logo", type="pil")

    button = gr.Button("Predict Stock Trend")

    button.click(
        fn=predict_stock,
        inputs=[dropdown, slider],
        outputs=[plot_output, logo_output]
    )

# üöÄ Launch in Colab
demo.launch(share=True)